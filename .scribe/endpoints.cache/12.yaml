## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Item management'
description: |-

  APIs for managing Items
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/nft'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of Items.'
      description: 'Get a paginated list of all Items.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'The number of items per page (1-100).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Filter items by name.'
        required: false
        example: '"Phoenix"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sorting:
        name: sorting
        description: 'Sort items by column and direction (column:direction).'
        required: false
        example: '"created_at:desc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter items by parent ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      page: 0
      limit: 10
      filter: '"Phoenix"'
      sorting: '"created_at:desc"'
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/manager/nft'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created Item.'
      description: 'Create a new Item with the provided data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the Item.'
        required: true
        example: '"Rare Phoenix"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      short_description:
        name: short_description
        description: 'The short description of the Item.'
        required: false
        example: '"A rare phoenix collectible"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The detailed description of the Item.'
        required: false
        example: '"This is a detailed description of the rare phoenix collectible"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category:
        name: category
        description: 'The category of the Item.'
        required: false
        example: '"Collectible"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      subcategory:
        name: subcategory
        description: 'The subcategory of the Item.'
        required: false
        example: '"Mythical"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      portrait_image:
        name: portrait_image
        description: 'The portrait image URL of the Item.'
        required: false
        example: '"https://example.com/portrait.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      featured_image:
        name: featured_image
        description: 'The featured image URL of the Item.'
        required: false
        example: '"https://example.com/featured.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      token_props:
        name: token_props
        description: 'The token properties.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      token_realm:
        name: token_realm
        description: 'The token realm.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      token_number:
        name: token_number
        description: 'The token number.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Rare Phoenix"'
      short_description: '"A rare phoenix collectible"'
      description: '"This is a detailed description of the rare phoenix collectible"'
      category: '"Collectible"'
      subcategory: '"Mythical"'
      portrait_image: '"https://example.com/portrait.jpg"'
      featured_image: '"https://example.com/featured.jpg"'
      token_props: 1
      token_realm: 2
      token_number: 3
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/nft/{id}'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified Item.'
      description: 'Get details of a specific Item by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the nft.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/{account}/manager/nft/{id}'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified Item.'
      description: 'Update an existing Item with the provided data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the nft.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the Item.'
        required: true
        example: '"Rare Phoenix"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      short_description:
        name: short_description
        description: 'The short description of the Item.'
        required: false
        example: '"A rare phoenix collectible"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The detailed description of the Item.'
        required: false
        example: '"This is a detailed description of the rare phoenix collectible"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      category:
        name: category
        description: 'The category of the Item.'
        required: false
        example: '"Collectible"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      subcategory:
        name: subcategory
        description: 'The subcategory of the Item.'
        required: false
        example: '"Mythical"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      portrait_image:
        name: portrait_image
        description: 'The portrait image URL of the Item.'
        required: false
        example: '"https://example.com/portrait.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      featured_image:
        name: featured_image
        description: 'The featured image URL of the Item.'
        required: false
        example: '"https://example.com/featured.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      token_props:
        name: token_props
        description: 'The token properties.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      token_realm:
        name: token_realm
        description: 'The token realm.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      token_number:
        name: token_number
        description: 'The token number.'
        required: true
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Rare Phoenix"'
      short_description: '"A rare phoenix collectible"'
      description: '"This is a detailed description of the rare phoenix collectible"'
      category: '"Collectible"'
      subcategory: '"Mythical"'
      portrait_image: '"https://example.com/portrait.jpg"'
      featured_image: '"https://example.com/featured.jpg"'
      token_props: 1
      token_realm: 2
      token_number: 3
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/nft/{id}'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified Item.'
      description: 'Delete an Item by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the nft.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/nft'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified Item.'
      description: 'Delete an Item by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/nft-download'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'Download Items as CSV or JSON.'
      description: 'Export the Item data in CSV or JSON format.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'The file format to download (csv or json).'
        required: false
        example: '"csv"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'The number of items per page (1-100).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Filter items by name.'
        required: false
        example: '"Phoenix"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sorting:
        name: sorting
        description: 'Sort items by column and direction (column:direction).'
        required: false
        example: '"created_at:desc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter items by parent ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      type: '"csv"'
      page: 0
      limit: 10
      filter: '"Phoenix"'
      sorting: '"created_at:desc"'
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/nft-fields'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'List the fields of the Item model.'
      description: 'Get the structure and field types of the Item model.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/manager/nft-upload'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload a CSV file for bulk Item processing.'
      description: 'Upload a CSV file to create multiple Items at once.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The CSV file to upload (max 1MB). Must be a CSV file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      header_mapping:
        name: header_mapping
        description: 'Array of headers mapping to Item fields.'
        required: true
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      header_mapping:
        - consequatur
    fileParameters:
      file: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/nft-upload'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the status of a bulk Item upload.'
      description: 'Check the progress of a previously submitted bulk upload.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/nft-upload/{id}'
    metadata:
      groupName: 'Item management'
      groupDescription: |-

        APIs for managing Items
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a bulk Item upload.'
      description: 'Remove a pending or processing bulk upload.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the nft upload.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
