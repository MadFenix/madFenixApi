## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Product Order management'
description: |-

  APIs for managing product orders
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/product-order'
    metadata:
      groupName: 'Product Order management'
      groupDescription: |-

        APIs for managing product orders
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of product orders.'
      description: 'Get a paginated list of all product orders.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'The number of items per page (1-100).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Filter product orders by ID.'
        required: false
        example: '"123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sorting:
        name: sorting
        description: 'Sort product orders by column and direction (column:direction).'
        required: false
        example: '"created_at:desc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter product orders by product ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      page: 0
      limit: 10
      filter: '"123"'
      sorting: '"created_at:desc"'
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/product-order/{id}'
    metadata:
      groupName: 'Product Order management'
      groupDescription: |-

        APIs for managing product orders
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified product order.'
      description: 'Delete a product order by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the product order.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/product-order'
    metadata:
      groupName: 'Product Order management'
      groupDescription: |-

        APIs for managing product orders
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified product order.'
      description: 'Delete a product order by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/product-order-download'
    metadata:
      groupName: 'Product Order management'
      groupDescription: |-

        APIs for managing product orders
      subgroup: ''
      subgroupDescription: ''
      title: 'Download product orders as CSV or JSON.'
      description: 'Export the product order data in CSV or JSON format.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'The file format to download (csv or json).'
        required: false
        example: '"csv"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'The number of items per page (1-100).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Filter product orders by ID.'
        required: false
        example: '"123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sorting:
        name: sorting
        description: 'Sort product orders by column and direction (column:direction).'
        required: false
        example: '"created_at:desc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter product orders by product ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      type: '"csv"'
      page: 0
      limit: 10
      filter: '"123"'
      sorting: '"created_at:desc"'
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
