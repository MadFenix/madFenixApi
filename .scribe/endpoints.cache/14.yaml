## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Season management'
description: |-

  APIs for managing seasons
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/season'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of seasons.'
      description: 'Get a paginated list of all seasons.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'The number of items per page (1-100).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Filter seasons by name.'
        required: false
        example: '"Summer Season"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sorting:
        name: sorting
        description: 'Sort seasons by column and direction (column:direction).'
        required: false
        example: '"created_at:desc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter seasons by parent ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      page: 0
      limit: 10
      filter: '"Summer Season"'
      sorting: '"created_at:desc"'
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/manager/season'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created season.'
      description: 'Create a new season with the provided data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the season.'
        required: true
        example: '"Summer Season 2023"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_level:
        name: max_level
        description: 'The maximum level achievable in this season.'
        required: true
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_points:
        name: max_points
        description: 'The maximum points achievable in this season.'
        required: true
        example: 10000
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'The start date and time of the season.'
        required: true
        example: '"2023-06-01 00:00:00"'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'The end date and time of the season.'
        required: true
        example: '"2023-08-31 23:59:59"'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Summer Season 2023"'
      max_level: 100
      max_points: 10000
      start_date: '"2023-06-01 00:00:00"'
      end_date: '"2023-08-31 23:59:59"'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/season/{id}'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified season.'
      description: 'Get details of a specific season by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the season.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/{account}/manager/season/{id}'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified season.'
      description: 'Update an existing season with the provided data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the season.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the season.'
        required: true
        example: '"Updated Summer Season 2023"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_level:
        name: max_level
        description: 'The maximum level achievable in this season.'
        required: true
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_points:
        name: max_points
        description: 'The maximum points achievable in this season.'
        required: true
        example: 10000
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'The start date and time of the season.'
        required: true
        example: '"2023-06-01 00:00:00"'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'The end date and time of the season.'
        required: true
        example: '"2023-08-31 23:59:59"'
        type: datetime
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: '"Updated Summer Season 2023"'
      max_level: 100
      max_points: 10000
      start_date: '"2023-06-01 00:00:00"'
      end_date: '"2023-08-31 23:59:59"'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/season/{id}'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified season.'
      description: 'Delete a season by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the season.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/season'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified season.'
      description: 'Delete a season by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/season-download'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Download seasons as CSV or JSON.'
      description: 'Export the season data in CSV or JSON format.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'The file format to download (csv or json).'
        required: false
        example: '"csv"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'The number of items per page (1-100).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Filter seasons by name.'
        required: false
        example: '"Summer Season"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sorting:
        name: sorting
        description: 'Sort seasons by column and direction (column:direction).'
        required: false
        example: '"created_at:desc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter seasons by parent ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      type: '"csv"'
      page: 0
      limit: 10
      filter: '"Summer Season"'
      sorting: '"created_at:desc"'
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/season-fields'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'List the fields of the season model.'
      description: 'Get the structure and field types of the season model.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/manager/season-upload'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload a CSV file for bulk season processing.'
      description: 'Upload a CSV file to create multiple seasons at once.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The CSV file to upload (max 1MB). Must be a CSV file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      header_mapping:
        name: header_mapping
        description: 'Array of headers mapping to season fields.'
        required: true
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      header_mapping:
        - consequatur
    fileParameters:
      file: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/season-upload'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the status of a bulk season upload.'
      description: 'Check the progress of a previously submitted bulk upload.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/season-upload/{id}'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a bulk season upload.'
      description: 'Remove a pending or processing bulk upload.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the season upload.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/season/seasonDetails'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Get details of the current active season.'
      description: 'Retrieve detailed information about the currently active season, including rewards and user progress.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/season/redeemSeasonLvl'
    metadata:
      groupName: 'Season management'
      groupDescription: |-

        APIs for managing seasons
      subgroup: ''
      subgroupDescription: ''
      title: 'Redeem a season level reward.'
      description: 'Claim the reward for a specific level in the current season.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      level:
        name: level
        description: 'The level to redeem the reward for.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      level: 5
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
