name: 'Profile management'
description: |-

  APIs for managing profiles
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/admin-dashboard'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Get admin dashboard statistics.'
      description: 'Retrieve platform-wide statistics for the admin dashboard.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/profile'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of profiles.'
      description: 'Get a paginated list of all user profiles.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'The number of items per page (1-100).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Filter profiles by description.'
        required: false
        example: '"Aprendiz"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sorting:
        name: sorting
        description: 'Sort profiles by column and direction (column:direction).'
        required: false
        example: '"created_at:desc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter profiles by parent ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      page: 0
      limit: 10
      filter: '"Aprendiz"'
      sorting: '"created_at:desc"'
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/profile/{id}'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified profile.'
      description: 'Get details of a specific profile by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/{account}/manager/profile/{id}'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified profile.'
      description: 'Update an existing profile with the provided data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the profile.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The ID of the user this profile belongs to.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'The description/status of the profile (4-255 chars).'
        required: true
        example: '"Aprendiz"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      details:
        name: details
        description: 'Additional details about the profile.'
        required: false
        example: '"Joined during Season 1"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      avatar:
        name: avatar
        description: 'The avatar URL or identifier (4-255 chars).'
        required: true
        example: '"avatar1.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      plumas_hedera:
        name: plumas_hedera
        description: 'The number of plumas (feathers) on Hedera.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      plumas:
        name: plumas
        description: 'The number of plumas (feathers).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      season_level:
        name: season_level
        description: 'The current season level.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      season_points:
        name: season_points
        description: 'The current season points.'
        required: false
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      oro_hedera:
        name: oro_hedera
        description: 'The number of oro (gold) on Hedera.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      oro:
        name: oro
        description: 'The number of oro (gold).'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      twitch_user_id:
        name: twitch_user_id
        description: 'The Twitch user ID.'
        required: false
        example: '"12345678"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      twitch_user_name:
        name: twitch_user_name
        description: 'The Twitch username.'
        required: false
        example: '"twitchuser"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      twitch_api_user_token:
        name: twitch_api_user_token
        description: 'The Twitch API user token.'
        required: false
        example: '"abc123token"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      twitch_api_user_refresh_token:
        name: twitch_api_user_refresh_token
        description: 'The Twitch API refresh token.'
        required: false
        example: '"abc123refresh"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      twitch_scope:
        name: twitch_scope
        description: 'The Twitch API scope.'
        required: false
        example: '"user:read:email"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      steam_user_id:
        name: steam_user_id
        description: 'The Steam user ID.'
        required: false
        example: '"76561198123456789"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      steam_user_name:
        name: steam_user_name
        description: 'The Steam username.'
        required: false
        example: '"steamuser"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 1
      description: '"Aprendiz"'
      details: '"Joined during Season 1"'
      avatar: '"avatar1.jpg"'
      plumas_hedera: 0
      plumas: 10
      season_level: 1
      season_points: 100
      oro_hedera: 0
      oro: 5
      twitch_user_id: '"12345678"'
      twitch_user_name: '"twitchuser"'
      twitch_api_user_token: '"abc123token"'
      twitch_api_user_refresh_token: '"abc123refresh"'
      twitch_scope: '"user:read:email"'
      steam_user_id: '"76561198123456789"'
      steam_user_name: '"steamuser"'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/profile-download'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Download profiles as CSV or JSON.'
      description: 'Export the profile data in CSV or JSON format.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'The file format to download (csv or json).'
        required: false
        example: '"csv"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'The number of items per page (1-100).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Filter profiles by description.'
        required: false
        example: '"Aprendiz"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sorting:
        name: sorting
        description: 'Sort profiles by column and direction (column:direction).'
        required: false
        example: '"created_at:desc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter profiles by parent ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      type: '"csv"'
      page: 0
      limit: 10
      filter: '"Aprendiz"'
      sorting: '"created_at:desc"'
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/profile/addPlumas'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Add plumas to user.'
      description: "Add a specified amount of plumas (feathers) to the current user's profile."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      plumas:
        name: plumas
        description: 'The amount of plumas to add.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 17
      plumas: 10
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/profile/addOro'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Add oro to user.'
      description: "Add a specified amount of oro (gold) to the current user's profile."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The ID of the user to add oro to.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      oro:
        name: oro
        description: 'The amount of oro to add.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      user_id: 1
      oro: 5
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/profile/getUserProfile'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: "Get current user's profile."
      description: "Retrieve detailed information about the authenticated user's profile, including habits, NFTs, and other statistics."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/profile/setAvatar'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Set user avatar.'
      description: "Update the avatar for the current user's profile."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nft_id:
        name: nft_id
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      avatar:
        name: avatar
        description: 'The new avatar URL or identifier.'
        required: true
        example: '"avatar2.jpg"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nft_id: consequatur
      avatar: '"avatar2.jpg"'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/profile/setEstado'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Set user status.'
      description: "Update the status/description for the current user's profile."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      nft_id:
        name: nft_id
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      estado:
        name: estado
        description: 'The new status/description for the profile.'
        required: true
        example: '"Explorador"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      nft_id: consequatur
      estado: '"Explorador"'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/profile/subtractPlumaUser'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Subtract plumas from user.'
      description: "Deduct a specified amount of plumas (feathers) from the current user's profile."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/profile/subtractOroUser'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Subtract oro from user.'
      description: "Deduct a specified amount of oro (gold) from the current user's profile."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/profile/setUserProfileReferredCode'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: "Set user's referral code."
      description: "Update the referral code for the current user's profile."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      referred_code:
        name: referred_code
        description: 'The referral code to set.'
        required: true
        example: '"REF123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      referred_code: '"REF123"'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/profile/setUserProfileReferredCodeFrom'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Set referral code source.'
      description: "Update the referral code source for the current user's profile."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      referred_code_from:
        name: referred_code_from
        description: 'The referral code that referred this user.'
        required: true
        example: '"FRIEND123"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      referred_code_from: '"FRIEND123"'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/profile/setUserProfileHederaWalletCheck'
    metadata:
      groupName: 'Profile management'
      groupDescription: |-

        APIs for managing profiles
      subgroup: ''
      subgroupDescription: ''
      title: 'Set Hedera wallet verification status.'
      description: "Update the Hedera wallet verification status for the current user's profile."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      hedera_wallet_check:
        name: hedera_wallet_check
        description: 'Whether the Hedera wallet is verified.'
        required: true
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      hedera_wallet_check_account:
        name: hedera_wallet_check_account
        description: 'The Hedera account that verified the wallet.'
        required: true
        example: '"0.0.123456"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      account: consequatur
      hedera_wallet_check: true
      hedera_wallet_check_account: '"0.0.123456"'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
