name: 'Season Rewards management'
description: |-

  APIs for managing season rewards
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/season-reward'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of season rewards.'
      description: 'Get a paginated list of all season rewards.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'The number of items per page (1-100).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Filter rewards by level.'
        required: false
        example: '"5"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sorting:
        name: sorting
        description: 'Sort rewards by column and direction (column:direction).'
        required: false
        example: '"level:asc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter rewards by season ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      page: 0
      limit: 10
      filter: '"5"'
      sorting: '"level:asc"'
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/manager/season-reward'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created season reward.'
      description: 'Create a new season reward with the provided data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      level:
        name: level
        description: 'The level at which this reward is unlocked.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      required_points:
        name: required_points
        description: 'The points required to reach this level.'
        required: true
        example: 500
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      oro:
        name: oro
        description: 'The amount of oro (gold) awarded.'
        required: false
        example: 50
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      plumas:
        name: plumas
        description: 'The amount of plumas (feathers) awarded.'
        required: false
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      nft_id:
        name: nft_id
        description: 'The ID of the NFT awarded.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_nft_rewards:
        name: max_nft_rewards
        description: 'The maximum number of NFT rewards available.'
        required: false
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      custom_reward:
        name: custom_reward
        description: 'Any custom reward description.'
        required: false
        example: '"Special avatar frame"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      season_id:
        name: season_id
        description: 'The ID of the season this reward belongs to.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      level: 5
      required_points: 500
      oro: 50
      plumas: 100
      nft_id: 1
      max_nft_rewards: 100
      custom_reward: '"Special avatar frame"'
      season_id: 1
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/season-reward/{id}'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified season reward.'
      description: 'Get details of a specific season reward by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the season reward.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/{account}/manager/season-reward/{id}'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified season reward.'
      description: 'Update an existing season reward with the provided data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the season reward.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      level:
        name: level
        description: 'The level at which this reward is unlocked.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      required_points:
        name: required_points
        description: 'The points required to reach this level.'
        required: true
        example: 500
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      oro:
        name: oro
        description: 'The amount of oro (gold) awarded.'
        required: false
        example: 50
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      plumas:
        name: plumas
        description: 'The amount of plumas (feathers) awarded.'
        required: false
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      nft_id:
        name: nft_id
        description: 'The ID of the NFT awarded.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      max_nft_rewards:
        name: max_nft_rewards
        description: 'The maximum number of NFT rewards available.'
        required: false
        example: 100
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      custom_reward:
        name: custom_reward
        description: 'Any custom reward description.'
        required: false
        example: '"Special avatar frame"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      season_id:
        name: season_id
        description: 'The ID of the season this reward belongs to.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      level: 5
      required_points: 500
      oro: 50
      plumas: 100
      nft_id: 1
      max_nft_rewards: 100
      custom_reward: '"Special avatar frame"'
      season_id: 1
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/season-reward/{id}'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified season reward.'
      description: 'Delete a season reward by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the season reward.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/season-reward'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified season reward.'
      description: 'Delete a season reward by ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/season-reward-download'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'Download season rewards as CSV or JSON.'
      description: 'Export the season reward data in CSV or JSON format.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      type:
        name: type
        description: 'The file format to download (csv or json).'
        required: false
        example: '"csv"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      page:
        name: page
        description: 'The page number for pagination.'
        required: false
        example: 0
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      limit:
        name: limit
        description: 'The number of items per page (1-100).'
        required: false
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      filter:
        name: filter
        description: 'Filter rewards by level.'
        required: false
        example: '"5"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sorting:
        name: sorting
        description: 'Sort rewards by column and direction (column:direction).'
        required: false
        example: '"level:asc"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      parent_id:
        name: parent_id
        description: 'Filter rewards by season ID.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      type: '"csv"'
      page: 0
      limit: 10
      filter: '"5"'
      sorting: '"level:asc"'
      parent_id: 1
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/season-reward-fields'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'List the fields of the season reward model.'
      description: 'Get the structure and field types of the season reward model.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/manager/season-reward-upload'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload a CSV file for bulk season reward processing.'
      description: 'Upload a CSV file to create multiple season rewards at once.'
      authenticated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      file:
        name: file
        description: 'The CSV file to upload (max 1MB). Must be a CSV file.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      header_mapping:
        name: header_mapping
        description: 'Array of headers mapping to season reward fields.'
        required: true
        example:
          - consequatur
        type: 'string[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      header_mapping:
        - consequatur
    fileParameters:
      file: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/{account}/manager/season-reward-upload'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'Get the status of a bulk season reward upload.'
      description: 'Check the progress of a previously submitted bulk upload.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/{account}/manager/season-reward-upload/{id}'
    metadata:
      groupName: 'Season Rewards management'
      groupDescription: |-

        APIs for managing season rewards
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a bulk season reward upload.'
      description: 'Remove a pending or processing bulk upload.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      id:
        name: id
        description: 'The ID of the season reward upload.'
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
      id: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
