name: 'Phoenix Diary management'
description: |-

  APIs for managing phoenix diary
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/{account}/thePhoenixDiary/getCharacters'
    metadata:
      groupName: 'Phoenix Diary management'
      groupDescription: |-

        APIs for managing phoenix diary
      subgroup: ''
      subgroupDescription: ''
      title: 'Get available characters for Phoenix Diary.'
      description: 'Retrieve a list of all available characters for the Phoenix Diary game.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/{account}/thePhoenixDiary/createNewGame'
    metadata:
      groupName: 'Phoenix Diary management'
      groupDescription: |-

        APIs for managing phoenix diary
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new Phoenix Diary game.'
      description: 'Start a new game session with the selected character.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      account:
        name: account
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      account: consequatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      character_id:
        name: character_id
        description: 'The ID of the character to use in the game.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      character_id: 1
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
